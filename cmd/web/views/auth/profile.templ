package auth

import (
	"strconv"
	"time"
	"github.com/hail2skins/the-virtual-armory/internal/models"
)

// formatDate formats a time.Time pointer to a string
func formatDate(t *time.Time) string {
	if t == nil {
		return "N/A"
	}
	return t.Format("January 2, 2006")
}

// getLastUpdated returns the last updated date for the gun collection
func getLastUpdated(guns []models.Gun) string {
	if len(guns) == 0 {
		return "NEVER"
	}
	
	// Find the most recently updated gun
	var lastUpdated time.Time
	for _, gun := range guns {
		if gun.UpdatedAt.After(lastUpdated) {
			lastUpdated = gun.UpdatedAt
		}
	}
	
	return lastUpdated.Format("January 2, 2006")
}

// formatSubscriptionTier formats the subscription tier for display
func formatSubscriptionTier(tier string) string {
	switch tier {
	case "free":
		return "Free Tier"
	case "monthly":
		return "Liking It"
	case "yearly":
		return "Loving It"
	case "lifetime":
		return "Supporter"
	case "premium_lifetime":
		return "Big Baller"
	default:
		return tier
	}
}

templ Profile(user models.User, guns []models.Gun) {
	<!DOCTYPE html>
	<html lang="en" class="h-screen">
		<head>
			<meta charset="utf-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>The Virtual Armory - My Profile</title>
			<link rel="icon" href="/favicon.ico" type="image/x-icon"/>
			<link href="/assets/css/output.css" rel="stylesheet"/>
			<script src="/assets/js/htmx.min.js"></script>
		</head>
		<body class="bg-gray-100">
			<header class="bg-blue-800 text-white p-4">
				<div class="container mx-auto">
					<h1 class="text-2xl font-bold">The Virtual Armory</h1>
					<nav class="mt-2">
						<ul class="flex space-x-4">
							<li><a href="/" class="hover:underline">Home</a></li>
							<li><a href="/about" class="hover:underline">About</a></li>
							<li><a href="/contact" class="hover:underline">Contact</a></li>
							<li><a href="/owner" class="hover:underline font-bold">My Profile</a></li>
							if user.IsAdmin {
								<li><a href="/admin/dashboard" class="hover:underline">Admin</a></li>
							}
							<li><a href="/logout" class="hover:underline">Logout</a></li>
						</ul>
					</nav>
				</div>
			</header>
			<main class="container mx-auto p-4">
				<div class="max-w-6xl mx-auto">
					@flashMessage()
					
					<div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
						<div class="p-6">
							<h2 class="text-3xl font-bold mb-4">Welcome to Your Virtual Armory</h2>
							<div class="mb-6">
								<p class="text-lg text-gray-700">
									Hello, <span class="font-semibold">{ user.Email }</span>! This is your personal armory where you can manage your firearm collection.
								</p>
							</div>
							<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
								<div class="bg-blue-50 p-4 rounded-lg shadow-sm">
									<h3 class="font-bold text-lg mb-2">Account Details</h3>
									<p class="text-gray-700">Email: { user.Email }</p>
									<p class="text-gray-700">Member since: { user.CreatedAt.Format("January 2, 2006") }</p>
									if user.IsAdmin {
										<p class="mt-2 inline-block bg-blue-600 text-white px-2 py-1 rounded text-sm">Administrator</p>
									}
								</div>
								<div class="bg-blue-50 p-4 rounded-lg shadow-sm">
									<h3 class="font-bold text-lg mb-2">Collection Stats</h3>
									<p class="text-gray-700">Total Firearms: { strconv.Itoa(len(guns)) }</p>
									<p class="text-gray-700">Last Updated: { getLastUpdated(guns) }</p>
								</div>
								<div class="bg-blue-50 p-4 rounded-lg shadow-sm">
									<h3 class="font-bold text-lg mb-2">Subscription</h3>
									<p class="text-gray-700">Current Plan: { formatSubscriptionTier(user.SubscriptionTier) }</p>
									if !user.IsLifetimeSubscriber() && user.SubscriptionTier != "free" {
										<p class="text-gray-700">Expires: { user.SubscriptionExpiresAt.Format("January 2, 2006") }</p>
									}
									<a href="/pricing" class="mt-2 text-blue-600 hover:text-blue-800 text-sm">Change Plan</a>
								</div>
							</div>
							<div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
								<div class="bg-blue-50 p-4 rounded-lg shadow-sm">
									<h3 class="font-bold text-lg mb-2">Quick Actions</h3>
									<div class="space-y-2">
										<a href="/owner/guns/new" class="block bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded text-center">
											Add to Your Armory
										</a>
										<a href="/owner/guns" class="block bg-gray-600 hover:bg-gray-700 text-white py-2 px-4 rounded text-center">
											View All Firearms
										</a>
									</div>
								</div>
								<div class="bg-blue-50 p-4 rounded-lg shadow-sm">
									<h3 class="font-bold text-lg mb-2">Payment History</h3>
									<p class="text-gray-700 mb-2">View your payment history and subscription details.</p>
									<a href="/owner/payment-history" class="block bg-indigo-600 hover:bg-indigo-700 text-white py-2 px-4 rounded text-center">
										Payment History
									</a>
								</div>
							</div>
						</div>
					</div>

					<div class="flex justify-between items-center mb-6">
						<h2 class="text-2xl font-bold">Your Firearms</h2>
						<a href="/owner/guns/new" class="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded">Add New Firearm</a>
					</div>

					if len(guns) == 0 {
						<div class="bg-white shadow-md rounded-lg p-6 text-center">
							<p class="text-lg text-gray-600 mb-4">You haven't added any firearms to your armory yet.</p>
							<p class="text-gray-600 mb-6">Start building your virtual collection by adding your first firearm.</p>
							<a href="/owner/guns/new" class="inline-block bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded">Add Your First Firearm</a>
						</div>
					} else {
						<div class="bg-white shadow-md rounded-lg overflow-hidden">
							<table class="min-w-full divide-y divide-gray-200">
								<thead class="bg-gray-50">
									<tr>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Caliber</th>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Manufacturer</th>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Acquired</th>
										<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
									</tr>
								</thead>
								<tbody class="bg-white divide-y divide-gray-200">
									for _, gun := range guns {
										<tr class="hover:bg-gray-50">
											<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{ gun.Name }</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ gun.WeaponType.Type }</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ gun.Caliber.Caliber }</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ gun.Manufacturer.Name }</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{ formatDate(gun.Acquired) }</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
												<div class="flex space-x-2">
													<a href={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10)) } class="text-blue-600 hover:text-blue-900">View</a>
													<a href={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10) + "/edit") } class="text-indigo-600 hover:text-indigo-900">Edit</a>
													<form method="POST" action={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10) + "/delete") } onsubmit="return confirm('Are you sure you want to delete this firearm?');" class="inline">
														<button type="submit" class="text-red-600 hover:text-red-900">Delete</button>
													</form>
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					}
				</div>
			</main>
			<footer class="bg-gray-200 p-4 mt-8">
				<div class="container mx-auto text-center">
					<p>&copy; 2024 The Virtual Armory. All rights reserved.</p>
				</div>
			</footer>
		</body>
	</html>
}

templ flashMessage() {
	<script>
		// Function to get cookie by name
		function getCookie(name) {
			const value = `; ${document.cookie}`;
			const parts = value.split(`; ${name}=`);
			if (parts.length === 2) return parts.pop().split(';').shift();
			return null;
		}
		
		// Check for flash message on page load
		document.addEventListener('DOMContentLoaded', function() {
			const flashMessage = getCookie('flash_message');
			const flashType = getCookie('flash_type') || 'info';
			
			if (flashMessage) {
				// Create flash message element
				const flashDiv = document.createElement('div');
				flashDiv.className = `mb-6 p-4 rounded-md ${flashType === 'success' ? 'bg-green-500 text-white' : 'bg-yellow-500 text-white'}`;
				flashDiv.innerHTML = `<p>${flashMessage}</p>`;
				
				// Insert at the top of the main content
				const mainContent = document.querySelector('main .max-w-6xl');
				mainContent.insertBefore(flashDiv, mainContent.firstChild);
				
				// Clear the cookies
				document.cookie = 'flash_message=; Max-Age=-99999999; Path=/;';
				document.cookie = 'flash_type=; Max-Age=-99999999; Path=/;';
				
				// Auto-hide after 5 seconds
				setTimeout(() => {
					flashDiv.style.transition = 'opacity 1s';
					flashDiv.style.opacity = '0';
					setTimeout(() => flashDiv.remove(), 1000);
				}, 5000);
			}
		});
	</script>
} 