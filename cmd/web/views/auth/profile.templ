package auth

import (
	"strconv"
	"time"
	"github.com/hail2skins/the-virtual-armory/internal/models"
	"github.com/hail2skins/the-virtual-armory/cmd/web/views/partials"
)

// formatDate formats a time.Time pointer to a string
func formatDate(t *time.Time) string {
	if t == nil {
		return "N/A"
	}
	return t.Format("January 2, 2006")
}

// getLastUpdated returns the last updated date for the gun collection
func getLastUpdated(guns []models.Gun) string {
	if len(guns) == 0 {
		return "NEVER"
	}
	
	// Find the most recently updated gun
	var lastUpdated time.Time
	for _, gun := range guns {
		if gun.UpdatedAt.After(lastUpdated) {
			lastUpdated = gun.UpdatedAt
		}
	}
	
	return lastUpdated.Format("January 2, 2006")
}

// formatSubscriptionTier formats the subscription tier for display
func formatSubscriptionTier(tier string) string {
	switch tier {
	case "free":
		return "Free Tier"
	case "monthly":
		return "Liking It"
	case "yearly":
		return "Loving It"
	case "lifetime":
		return "Supporter"
	case "premium_lifetime":
		return "Big Baller"
	default:
		return tier
	}
}

templ Profile(user *models.User, guns []models.Gun, flashMessage string, flashType string) {
	@partials.BaseWithAuth(user != nil) {
		<div class="max-w-6xl mx-auto">
			if flashMessage != "" {
				if flashType == "success" {
					<div class="mb-6 p-4 rounded-md bg-green-500 text-white text-center">
						<p>{ flashMessage }</p>
					</div>
				} else if flashType == "error" {
					<div class="mb-6 p-4 rounded-md bg-red-500 text-white text-center">
						<p>{ flashMessage }</p>
					</div>
				} else if flashType == "warning" {
					<div class="mb-6 p-4 rounded-md bg-yellow-500 text-white text-center">
						<p>{ flashMessage }</p>
					</div>
				} else {
					<div class="mb-6 p-4 rounded-md bg-blue-500 text-white text-center">
						<p>{ flashMessage }</p>
					</div>
				}
			}
			
			<div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
				<div class="p-6">
					<h2 class="text-3xl font-bold mb-4">Welcome to Your Virtual Armory</h2>
					<div class="mb-6">
						<p class="text-lg text-gray-700">
							Hello, <span class="font-semibold">{ user.Email }</span>! This is your personal armory where you can manage your firearm collection.
						</p>
					</div>
					<div class="grid grid-cols-1 md:grid-cols-3 gap-4">
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Account Details</h3>
							<p class="text-gunmetal-700">Email: { user.Email }</p>
							<p class="text-gunmetal-700">Member since: { user.CreatedAt.Format("January 2, 2006") }</p>
							if user.IsAdmin {
								<p class="mt-2 inline-block bg-gunmetal-700 text-white px-2 py-1 rounded text-sm">Administrator</p>
							}
						</div>
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Collection Stats</h3>
							<p class="text-gunmetal-700">Total Firearms: { strconv.Itoa(len(guns)) }</p>
							<p class="text-gunmetal-700">Last Updated: { getLastUpdated(guns) }</p>
						</div>
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Subscription</h3>
							<p class="text-gunmetal-700">Current Plan: { formatSubscriptionTier(user.SubscriptionTier) }</p>
							if !user.IsLifetimeSubscriber() && user.SubscriptionTier != "free" {
								<p class="text-gunmetal-700">Expires: { user.SubscriptionExpiresAt.Format("January 2, 2006") }</p>
							}
							<a href="/pricing" class="mt-2 text-gunmetal-600 hover:text-brass-500 text-sm">Change Plan</a>
						</div>
					</div>
					<div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Quick Actions</h3>
							<div class="space-y-2">
								<a href="/owner/guns/new" class="block bg-rust-600 hover:bg-rust-700 text-white py-2 px-4 rounded text-center">
									Add to Your Armory
								</a>
								<a href="/owner/guns" class="block bg-gunmetal-600 hover:bg-gunmetal-700 text-white py-2 px-4 rounded text-center">
									View All Firearms
								</a>
							</div>
						</div>
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Account Management</h3>
							<div class="space-y-2">
								<a href="/profile" class="block bg-rust-600 hover:bg-rust-700 text-white py-2 px-4 rounded text-center">
									Manage Profile
								</a>
							</div>
						</div>
					</div>
					<div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
						<div class="bg-gunmetal-100 p-4 rounded-lg shadow-sm">
							<h3 class="font-bold text-lg mb-2">Payment History</h3>
							<a href="/owner/payment-history" class="block bg-rust-600 hover:bg-rust-700 text-white py-2 px-4 rounded text-center">
								Payment History
							</a>
						</div>
					</div>
				</div>
			</div>

			<div class="flex justify-between items-center mb-6">
				<h2 class="text-2xl font-bold">Your Firearms</h2>
				<a href="/owner/guns/new" class="bg-rust-600 hover:bg-rust-700 text-white py-2 px-4 rounded">Add New Firearm</a>
			</div>

			if len(guns) == 0 {
				<div class="bg-white shadow-md rounded-lg p-6 text-center">
					<p class="text-lg text-gunmetal-600 mb-4">You haven't added any firearms to your armory yet.</p>
					<p class="text-gunmetal-600 mb-6">Start building your virtual collection by adding your first firearm.</p>
					<a href="/owner/guns/new" class="inline-block bg-rust-600 hover:bg-rust-700 text-white py-2 px-4 rounded">Add Your First Firearm</a>
				</div>
			} else {
				<div class="bg-white shadow-md rounded-lg overflow-hidden">
					<table class="min-w-full divide-y divide-gray-200">
						<thead class="bg-gunmetal-100">
							<tr>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Name</th>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Type</th>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Caliber</th>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Manufacturer</th>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Acquired</th>
								<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gunmetal-700 uppercase tracking-wider">Actions</th>
							</tr>
						</thead>
						<tbody class="bg-white divide-y divide-gray-200">
							for _, gun := range guns {
								<tr class="hover:bg-gunmetal-50">
									<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gunmetal-900">{ gun.Name }</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gunmetal-700">{ gun.WeaponType.Type }</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gunmetal-700">{ gun.Caliber.Caliber }</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gunmetal-700">{ gun.Manufacturer.Name }</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm text-gunmetal-700">{ formatDate(gun.Acquired) }</td>
									<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
										<div class="flex space-x-2">
											<a href={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10)) } class="text-gunmetal-600 hover:text-brass-500">View</a>
											<a href={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10) + "/edit") } class="text-gunmetal-600 hover:text-brass-500">Edit</a>
											<form method="POST" action={ templ.SafeURL("/owner/guns/" + strconv.FormatUint(uint64(gun.ID), 10) + "/delete") } onsubmit="return confirm('Are you sure you want to delete this firearm?');" class="inline">
												<button type="submit" class="text-red-600 hover:text-red-900">Delete</button>
											</form>
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			}
		</div>
	}
}

templ flashMessage() {
	<!-- Flash messages are now handled by the base template -->
} 